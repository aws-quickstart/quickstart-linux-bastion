{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "This template is intended to be deployed into an existing VPC with two public subnets. It will create an auto-scaling group of Linux bastion instances in the public VPC subnets. **WARNING** This template creates Amazon EC2 instance and related resources. You will be billed for the AWS resources used if you create a stack from this template. QS(0037)",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "PublicSubnet1ID",
                        "PublicSubnet2ID",
                        "RemoteAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Amazon EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "BastionAMIOS",
                        "BastionInstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "Elastic Load Balancing Configuration"
                    },
                    "Parameters": [
                        "UseELB",
                        "ELBRotationScheduleUp",
                        "ELBRotationScheduleDown",
                    ]
                },
                {
                    "Label": {
                        "default": "Linux Bastion Configuration"
                    },
                    "Parameters": [
                        "NumBastionHosts",
                        "EnableBanner",
                        "BastionBanner",
                        "EnableTCPForwarding",
                        "EnableX11Forwarding"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "BastionAMIOS": {
                    "default": "Bastion AMI Operating System"
                },
                "UseELB": {
                    "default": "Elastic Load Balancing"
                },
                "ELBRotationScheduleUp": {
                    "default": "Rotation Start"
                },
                "ELBRotationScheduleDown": {
                    "default": "Rotation Finsh"
                },
                "BastionBanner": {
                    "default": "Bastion Banner"
                },
                "BastionInstanceType": {
                    "default": "Bastion Instance Type"
                },
                "EnableBanner": {
                    "default": "Enable Banner"
                },
                "EnableTCPForwarding": {
                    "default": "Enable TCP Forwarding"
                },
                "EnableX11Forwarding": {
                    "default": "Enable X11 Forwarding"
                },
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "NumBastionHosts": {
                    "default": "Number of Bastion Hosts"
                },
                "PublicSubnet1ID": {
                    "default": "Public Subnet 1 ID"
                },
                "PublicSubnet2ID": {
                    "default": "Public Subnet 2 ID"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed Bastion External Access CIDR"
                },
                "VPCID": {
                    "default": "VPC ID"
                }
            }
        }
    },
    "Parameters": {
        "BastionAMIOS": {
            "AllowedValues": [
                "Amazon-Linux-HVM",
                "CentOS-7-HVM",
                "Ubuntu-Server-14.04-LTS-HVM",
                "Ubuntu-Server-16.04-LTS-HVM"
            ],
            "Default": "Amazon-Linux-HVM",
            "Description": "The Linux distribution for the AMI to be used for the bastion instances",
            "Type": "String"
        },
        "BastionBanner": {
            "Default": "https://s3.amazonaws.com/quickstart-reference/linux/bastion/latest/scripts/banner_message.txt",
            "Description": "Banner text to display upon login",
            "Type": "String"
        },
        "BastionInstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "t2.micro",
            "Description": "Amazon EC2 instance type for the bastion instances",
            "Type": "String"
        },
        "UseELB": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "false",
            "Description": "ELB provides single name but multiple IPs. EIPs will be used if false",
            "Type": "String"
        },
        "ELBRotationScheduleUp": {
            "Default": "",
            "Description": "Cron schedule to add an additional bastion to start a rotation event",
            "Type": "String"
        },
        "ELBRotationScheduleDown": {
            "Default": "",
            "Description": "Cron schedule to add an additional bastion to complete a rotation event",
            "Type": "String"
        },
        "EnableBanner": {
            "AllowedValues": [
                "true",
                "false"
            ],
            "Default": "false",
            "Description": "To include a banner to be displayed when connecting via SSH to the bastion, set this parameter to true",
            "Type": "String"
        },
        "EnableTCPForwarding": {
            "Type": "String",
            "Description": "Enable/Disable TCP Forwarding",
            "Default": "false",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "EnableX11Forwarding": {
            "Type": "String",
            "Description": "Enable/Disable X11 Forwarding",
            "Default": "false",
            "AllowedValues": [
                "true",
                "false"
            ]
        },
        "KeyPairName": {
            "Description": "Enter a Public/private key pair. If you do not have one in this region, please create it before continuing",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NumBastionHosts": {
            "AllowedValues": [
                "1",
                "2",
                "3",
                "4"
            ],
            "Default": "1",
            "Description": "Enter the number of bastion hosts to create",
            "Type": "String"
        },
        "PublicSubnet1ID": {
            "Description": "ID of the public subnet 1 that you want to provision the first bastion into (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet2ID": {
            "Description": "ID of the public subnet 2 you want to provision the second bastion into (e.g., subnet-e3246d8e)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "quickstart-reference",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "linux/bastion/latest/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for external SSH access to the bastions",
            "Type": "String"
        },
        "VPCID": {
            "Description": "ID of the VPC (e.g., vpc-0343606e)",
            "Type": "AWS::EC2::VPC::Id"
        }
    },
    "Rules": {
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must exist in the VPC"
                }
            ]
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "AMZNLINUXHVM": "amzn-ami-hvm-2017.03.1.20170623-x86_64-gp2",
                "CENTOS7HVM": "CentOS Linux 7 x86_64 HVM EBS 1704_01-b7ee8a69-ee97-4a49-9e68-afaee216db2e-ami-d52f5bc3.4",
                "US1404HVM": "ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-20170619",
                "US1604HVM": "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20170619.1"
            },
            "ap-northeast-1": {
                "AMZNLINUXHVM": "ami-3bd3c45c",
                "CENTOS7HVM": "ami-29d1e34e",
                "US1404HVM": "ami-8c4055eb",
                "US1604HVM": "ami-785c491f"
            },
            "ap-northeast-2": {
                "AMZNLINUXHVM": "ami-e21cc38c",
                "CENTOS7HVM": "ami-08e93466",
                "US1404HVM": "ami-3fca1551",
                "US1604HVM": "ami-94d20dfa"
            },
            "ap-south-1": {
                "AMZNLINUXHVM": "ami-47205e28",
                "CENTOS7HVM": "ami-3c0e7353",
                "US1404HVM": "ami-23daa54c",
                "US1604HVM": "ami-49e59a26"
            },
            "ap-southeast-1": {
                "AMZNLINUXHVM": "ami-77af2014",
                "CENTOS7HVM": "ami-7d2eab1e",
                "US1404HVM": "ami-5d72ff3e",
                "US1604HVM": "ami-2378f540"
            },
            "ap-southeast-2": {
                "AMZNLINUXHVM": "ami-10918173",
                "CENTOS7HVM": "ami-34171d57",
                "US1404HVM": "ami-21766642",
                "US1604HVM": "ami-e94e5e8a"
            },
            "ca-central-1": {
                "AMZNLINUXHVM": "ami-a7aa15c3",
                "CENTOS7HVM": "ami-28823e4c",
                "US1404HVM": "ami-7fd26d1b",
                "US1604HVM": "ami-7ed56a1a"
            },
            "eu-central-1": {
                "AMZNLINUXHVM": "ami-82be18ed",
                "CENTOS7HVM": "ami-fa2df395",
                "US1404HVM": "ami-344fe85b",
                "US1604HVM": "ami-1c45e273"
            },
            "eu-west-1": {
                "AMZNLINUXHVM": "ami-d7b9a2b1",
                "CENTOS7HVM": "ami-061b1560",
                "US1404HVM": "ami-d37961b5",
                "US1604HVM": "ami-6d48500b"
            },
            "eu-west-2": {
                "AMZNLINUXHVM": "ami-ed100689",
                "CENTOS7HVM": "ami-e05a4d84",
                "US1404HVM": "ami-d67c6ab2",
                "US1604HVM": "ami-cc7066a8"
            },
            "sa-east-1": {
                "AMZNLINUXHVM": "ami-87dab1eb",
                "CENTOS7HVM": "ami-b31a75df",
                "US1404HVM": "ami-d1a7ccbd",
                "US1604HVM": "ami-34afc458"
            },
            "us-east-1": {
                "AMZNLINUXHVM": "ami-a4c7edb2",
                "CENTOS7HVM": "ami-46c1b650",
                "US1404HVM": "ami-4b133c5d",
                "US1604HVM": "ami-d15a75c7"
            },
            "us-east-2": {
                "AMZNLINUXHVM": "ami-8a7859ef",
                "CENTOS7HVM": "ami-18f8df7d",
                "US1404HVM": "ami-019abc64",
                "US1604HVM": "ami-8b92b4ee"
            },
            "us-west-1": {
                "AMZNLINUXHVM": "ami-327f5352",
                "CENTOS7HVM": "ami-f5d7f195",
                "US1404HVM": "ami-89f3dee9",
                "US1604HVM": "ami-73f7da13"
            },
            "us-west-2": {
                "AMZNLINUXHVM": "ami-6df1e514",
                "CENTOS7HVM": "ami-f4533694",
                "US1404HVM": "ami-d94f5aa0",
                "US1604HVM": "ami-835b4efa"
            }
        },
        "LinuxAMINameMap": {
            "Amazon-Linux-HVM": {
                "Code": "AMZNLINUXHVM"
            },
            "CentOS-7-HVM": {
                "Code": "CENTOS7HVM"
            },
            "Ubuntu-Server-14.04-LTS-HVM": {
                "Code": "US1404HVM"
            },
            "Ubuntu-Server-16.04-LTS-HVM": {
                "Code": "US1604HVM"
            }
        },
        "AdditionHack" : {
            "1" : {"AddOne" : "2"},
            "2" : {"AddOne" : "3"},
            "3" : {"AddOne" : "4"},
            "4" : {"AddOne" : "5"}
        }
    },
    "Conditions": {
        "2BastionCondition": {
            "Fn::And": [
              {"Condition": "UseElasticIPs"},
              {
                "Fn::Or": [
                  {"Fn::Equals": [{"Ref": "NumBastionHosts"},"2"]},
                  {"Condition": "3BastionCondition"},
                  {"Condition": "4BastionCondition"}
                ]
              }
            ]
        },
        "3BastionCondition": {
            "Fn::And": [
              {"Condition": "UseElasticIPs"},
              {
                "Fn::Or": [
                  {"Fn::Equals": [{"Ref": "NumBastionHosts"},"3"]},
                  {"Condition": "4BastionCondition"}
                ]
              }
            ]
        },
        "4BastionCondition": {
            "Fn::And": [
              {"Condition": "UseElasticIPs"},
              {"Fn::Equals": [{"Ref": "NumBastionHosts"},"4"]}
            ]
        },
        "GovCloudCondition": {
            "Fn::Equals": [{"Ref": "AWS::Region"},"us-gov-west-1"]
        },
        "UseElasticLoadBalancer": {
            "Fn::Equals": [{"Ref": "UseELB"},"true"]
        },
        "UseElasticIPs": {
            "Fn::Equals": [{"Ref": "UseELB"},"false"]
        },
        "UseELBScheduledRotation": {
            "Fn::And": [
              { "Fn::Equals": [{"Ref": "UseELB"},"true"] },
              { "Fn::Not": ["Fn::Equals": [{"Ref": "ELBRotationScheduleUp"}, ""]] },
              { "Fn::Not": ["Fn::Equals": [{"Ref": "ELBRotationScheduleDown"}, ""]] }
            ]
        }
    },
    "Resources": {
        "BastionMainLogGroup": {
            "Type": "AWS::Logs::LogGroup"
        },
        "SSHMetricFilter": {
            "Type": "AWS::Logs::MetricFilter",
            "Properties": {
                "LogGroupName": {
                    "Ref": "BastionMainLogGroup"
                },
                "FilterPattern": "ON FROM USER PWD",
                "MetricTransformations": [
                    {
                        "MetricName": "SSHCommandCount",
                        "MetricValue": 1,
                        "MetricNamespace": {
                            "Fn::Join": [
                                "/",
                                [
                                    "AWSQuickStart",
                                    {
                                        "Ref": "AWS::StackName"
                                    }
                                ]
                            ]
                        }
                    }
                ]
            }
        },
        "QuickStartS3Policy": {
           "Type": "AWS::IAM::ManagedPolicy",
           "Properties" : {
              "PolicyDocument" : {
                 "Version": "2012-10-17",
                "Statement": [
                   {
                       "Action": [ "s3:GetObject" ],
                       "Resource": {
                           "Fn::Sub": [
                               "arn:${Partition}:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*",
                               {
                                   "Partition": {
                                       "Fn::If": [
                                           "GovCloudCondition",
                                           "aws-us-gov",
                                           "aws"
                                       ]
                                   }
                               }
                           ]
                       },
                       "Effect": "Allow"
                   }
               ]
              }
           }
        },
        "InstanceRoleDiscoveryPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
               "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                      {
                        "Action": [
                            "autoscaling:DescribeAutoScalingInstances",
                            "ec2:ReplaceIamInstanceProfileAssociation",
                            "ec2:DescribeIamInstanceProfileAssociations",
                            "iam:ListInstanceProfiles"
                        ],
                        "Resource": [
                            "*"
                        ],
                        "Effect": "Allow"
                      }
                  ]
              }
            }
         },
         "SwapRolePolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
               "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                      {
                        "Action": "iam:PassRole",
                        "Resource": {"Fn::GetAtt" : ["BastionHostRole", "Arn"] },
                        "Effect": "Allow"
                      }
                  ]
              }
            }
         },
        "CloudWatchLogsPolicy": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
               "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                      {
                        "Action": [
                            "logs:CreateLogStream",
                            "logs:GetLogEvents",
                            "logs:PutLogEvents",
                            "logs:DescribeLogGroups",
                            "logs:DescribeLogStreams",
                            "logs:PutRetentionPolicy",
                            "logs:PutMetricFilter",
                            "logs:CreateLogGroup"
                        ],
                        "Resource": {
                            "Fn::Sub": [
                                "arn:${Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${BastionMainLogGroup}:*",
                                {
                                    "Partition": {
                                        "Fn::If": [
                                            "GovCloudCondition",
                                            "aws-us-gov",
                                            "aws"
                                        ]
                                    }
                                }
                            ]
                        },
                        "Effect": "Allow"
                      }
                  ]
              }
            }
         },
        "BastionHostEIPInitRole": {
            "Type": "AWS::IAM::Role",
            "Condition": "UseElasticIPs",
            "Properties": {
                "ManagedPolicyArns": [
                  { "Ref": "CloudWatchLogsPolicy" },
                  { "Ref": "QuickStartS3Policy" },
                  { "Ref": "SwapRolePolicy" },
                  { "Ref": "InstanceRoleDiscoveryPolicy" }
                ],
                "Policies": [
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "s3:GetObject"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": [
                                            "arn:${Partition}:s3:::${QSS3BucketName}/${QSS3KeyPrefix}*",
                                            {
                                                "Partition": {
                                                    "Fn::If": [
                                                        "GovCloudCondition",
                                                        "aws-us-gov",
                                                        "aws"
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "aws-quick-start-s3-policy"
                    },
                    {
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Action": [
                                        "ec2:AssociateAddress",
                                        "ec2:DescribeAddresses"
                                    ],
                                    "Resource": [
                                        "*"
                                    ],
                                    "Effect": "Allow"
                                }
                            ]
                        },
                        "PolicyName": "bastion-eip-policy"
                    }
                ],
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Effect": "Allow"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            }
        },
        "BastionHostELBInitRole": {
            "Type": "AWS::IAM::Role",
            "Condition": "UseElasticLoadBalancer",
            "Properties": {
                "ManagedPolicyArns": [
                  { "Ref": "CloudWatchLogsPolicy" },
                  { "Ref": "QuickStartS3Policy" },
                  { "Ref": "SwapRolePolicy" },
                  { "Ref": "InstanceRoleDiscoveryPolicy" }
                ],
                "Policies": [
                    {
                      "PolicyDocument": {
                          "Version": "2012-10-17",
                          "Statement": [
                              {
                                  "Action": [
                                      "s3:ListBucket"
                                  ],
                                  "Resource": {
                                      "Fn::Sub": [
                                          "arn:${Partition}:s3:::${SSHServerCertBucket}",
                                          {
                                              "Partition": {
                                                  "Fn::If": [
                                                      "GovCloudCondition",
                                                      "aws-us-gov",
                                                      "aws"
                                                  ]
                                              }
                                          }
                                      ]
                                  },
                                  "Effect": "Allow"
                              }
                          ]
                      },
                      "PolicyName": "list-cert-bucket"
                  },
                  {
                      "PolicyDocument": {
                          "Version": "2012-10-17",
                          "Statement": [
                              {
                                  "Action": [
                                      "s3:GetObject",
                                      "s3:PutObject"
                                  ],
                                  "Resource": {
                                      "Fn::Sub": [
                                          "arn:${Partition}:s3:::${SSHServerCertBucket}/*",
                                          {
                                              "Partition": {
                                                  "Fn::If": [
                                                      "GovCloudCondition",
                                                      "aws-us-gov",
                                                      "aws"
                                                  ]
                                              }
                                          }
                                      ]
                                  },
                                  "Effect": "Allow"
                              }
                          ]
                      },
                      "PolicyName": "update-cert-bucket"
                  },
                ],
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Effect": "Allow"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            }
        },
        "BastionHostInitProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                      "Fn::If": [
                          "UseElasticIPs",
                          { "Ref": "BastionHostEIPInitRole" },
                          { "Ref": "BastionHostELBInitRole" }
                      ]
                    }
                ],
                "Path": "/"
            }
        },
        "BastionHostRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "ManagedPolicyArns": [
                  { "Ref": "CloudWatchLogsPolicy" }
                ],
                "Path": "/",
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com"
                                ]
                            },
                            "Effect": "Allow"
                        }
                    ],
                    "Version": "2012-10-17"
                }
            }
        },
        "BastionHostProfile": {
            "Type": "AWS::IAM::InstanceProfile",
            "Properties": {
                "Roles": [
                    {
                        "Ref": "BastionHostRole"
                    }
                ],
                "Path": { "Fn::Sub": "/${AWS::StackId}/bastion-host/" }
            }
        },
        "EIP1": {
            "Type": "AWS::EC2::EIP",
            "Condition": "UseElasticIPs",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "EIP2": {
            "Type": "AWS::EC2::EIP",
            "Condition": "2BastionCondition",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "EIP3": {
            "Type": "AWS::EC2::EIP",
            "Condition": "3BastionCondition",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "EIP4": {
            "Type": "AWS::EC2::EIP",
            "Condition": "4BastionCondition",
            "Properties": {
                "Domain": "vpc"
            }
        },
        "SSHServerCertBucket": {
            "Type": "AWS::S3::Bucket",
            "Condition": "UseElasticLoadBalancer",
            "DeletionPolicy": "Retain"
        },
        "BastionLoadBalancer": {
          "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
          "Condition": "UseElasticLoadBalancer",
          "Properties": {
            "CrossZone": "true",
            "ConnectionSettings": {
              "IdleTimeout": "75"
            },
            "Subnets": [
              {
                "Ref": "PublicSubnet1ID"
              },
              {
                "Ref": "PublicSubnet2ID"
              }
            ],
            "SecurityGroups": [
              {
                "Ref": "ELBSecurityGroup"
              }
            ],
            "Listeners": [
              {
                "InstancePort": "22",
                "LoadBalancerPort": "22",
                "Protocol": "TCP",
                "InstanceProtocol": "TCP"
              },
              {
                "InstancePort": "22",
                "LoadBalancerPort": "443",
                "Protocol": "TCP",
                "InstanceProtocol": "TCP"
              }
            ]
          }
        },
        "BastionAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Condition": "UseElasticIPs",
            "Properties": {
                "LaunchConfigurationName": {
                    "Ref": "BastionLaunchConfiguration"
                },
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PublicSubnet1ID"
                    },
                    {
                        "Ref": "PublicSubnet2ID"
                    }
                ],
                "MinSize": {
                    "Ref": "NumBastionHosts"
                },
                "MaxSize": {
                    "Ref": "NumBastionHosts"
                },
                "Cooldown": "300",
                "DesiredCapacity": {
                    "Ref": "NumBastionHosts"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "LinuxBastion",
                        "PropagateAtLaunch": "true"
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": {
                        "Ref": "NumBastionHosts"
                    },
                    "Timeout": "PT30M"
                }
            }
        },
        "BastionELBAutoScalingGroup": {
            "Type": "AWS::AutoScaling::AutoScalingGroup",
            "Condition": "UseElasticLoadBalancer",
            "Properties": {
                "LaunchConfigurationName": {
                    "Ref": "BastionLaunchConfiguration"
                },
                "LoadBalancerNames": [
                    {
                        "Ref": "BastionLoadBalancer"
                    }
                ],
                "VPCZoneIdentifier": [
                    {
                        "Ref": "PublicSubnet1ID"
                    },
                    {
                        "Ref": "PublicSubnet2ID"
                    }
                ],
                "MinSize": {
                    "Ref": "NumBastionHosts"
                },
                "MaxSize": {
                    "Ref": "NumBastionHosts"
                },
                "Cooldown": "300",
                "DesiredCapacity": {
                    "Ref": "NumBastionHosts"
                },
                "TerminationPolicies": [
                    "OldestInstance"
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "LinuxBastion",
                        "PropagateAtLaunch": "true"
                    }
                ]
            },
            "CreationPolicy": {
                "ResourceSignal": {
                    "Count": {
                        "Ref": "NumBastionHosts"
                    },
                    "Timeout": "PT30M"
                }
            }
        },
        "ScheduledActionUp": {
            "Type": "AWS::AutoScaling::ScheduledAction",
            "Condition": "UseELBScheduledRotation",
            "Properties": {
                "AutoScalingGroupName": {
                    "Ref": "BastionELBAutoScalingGroup"
                },
                "MaxSize": { "Fn::FindInMap" : [ "AdditionHack", { "Ref" : "NumBastionHosts" }, "AddOne" ] },
                "MinSize": { "Fn::FindInMap" : [ "AdditionHack", { "Ref" : "NumBastionHosts" }, "AddOne" ] },
                "Recurrence": { "Ref": "ELBRotationScheduleUp" }
            }
        },
        "ScheduledActionDown": {
            "Type": "AWS::AutoScaling::ScheduledAction",
            "Condition": "UseELBScheduledRotation",
            "Properties": {
                "AutoScalingGroupName": {
                    "Ref": "BastionELBAutoScalingGroup"
                },
                "MaxSize": { "Ref" : "NumBastionHosts" },
                "MinSize": { "Ref" : "NumBastionHosts" },
                "Recurrence": { "Ref": "ELBRotationScheduleDown" }
            }
        },
        "BastionLaunchConfiguration": {
            "Type": "AWS::AutoScaling::LaunchConfiguration",
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "type": "S3",
                        "roleName": {
                          "Fn::If": [
                              "UseElasticIPs",
                              { "Ref": "BastionHostEIPInitRole" },
                              { "Ref": "BastionHostELBInitRole" }
                          ]
                        },
                        "buckets": [
                            {
                                "Ref": "QSS3BucketName"
                            }
                        ]
                    }
                },
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/tmp/bastion_bootstrap.sh": {
                                "source": {
                                    "Fn::Sub": [
                                        "https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}scripts/bastion_bootstrap.sh",
                                        {
                                            "QSS3Region": {
                                                "Fn::If": [
                                                    "GovCloudCondition",
                                                    "s3-us-gov-west-1",
                                                    "s3"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "mode": "000550",
                                "owner": "root",
                                "group": "root",
                                "authentication": "S3AccessCreds"
                            }
                        },
                        "commands": {
                            "b-bootstrap": {
                                "command": {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "./tmp/bastion_bootstrap.sh",
                                            " --banner ",
                                            {
                                                "Ref": "BastionBanner"
                                            },
                                            " --enable ",
                                            {
                                                "Ref": "EnableBanner"
                                            },
                                            " --ssh-server-cert-bucket ",
                                            {
                                              "Fn::If": [
                                                "UseElasticLoadBalancer",
                                                {"Ref": "SSHServerCertBucket"},
                                                "NO_S3_BUCKET_USED"
                                              ]
                                            },
                                            " --stack-id ",
                                            {
                                                "Ref": "AWS::StackId"
                                            },
                                            " --tcp-forwarding ",
                                            {
                                                "Ref": "EnableTCPForwarding"
                                            },
                                            " --x11-forwarding ",
                                            {
                                                "Ref": "EnableX11Forwarding"
                                            }
                                        ]
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "Properties": {
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "IamInstanceProfile": {
                    "Ref": "BastionHostInitProfile"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        {
                            "Fn::FindInMap": [
                                "LinuxAMINameMap",
                                {
                                    "Ref": "BastionAMIOS"
                                },
                                "Code"
                            ]
                        }
                    ]
                },
                "SecurityGroups": [
                    {
                      "Fn::If": [
                          "UseElasticIPs",
                          { "Ref": "BastionEIPSecurityGroup" },
                          { "Ref": "BastionELBSecurityGroup" }
                      ]
                    }
                ],
                "InstanceType": {
                    "Ref": "BastionInstanceType"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash\n",
                                "export PATH=$PATH:/usr/local/bin\n",
                                "which pip &> /dev/null\n",
                                "if [ $? -ne 0 ] ; then\n",
                                "    echo \"PIP NOT INSTALLED\"\n",
                                "    [ `which yum` ] && $(yum install -y epel-release; yum install -y python-pip) && echo \"PIP INSTALLED\"\n",
                                "    [ `which apt-get` ] && apt-get -y update && apt-get -y install python-pip && echo \"PIP INSTALLED\"\n",
                                "fi\n",
                                "pip install --upgrade pip &> /dev/null\n",
                                "pip install awscli --ignore-installed six &> /dev/null\n",
                                "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
                                "EIP_LIST=\"",
                                {
                                    "Fn::If": [
                                        "UseElasticIPs",
                                        {
                                            "Ref": "EIP1"
                                        },
                                        "Null"
                                    ]
                                },
                                ",",
                                {
                                    "Fn::If": [
                                        "2BastionCondition",
                                        {
                                            "Ref": "EIP2"
                                        },
                                        "Null"
                                    ]
                                },
                                ",",
                                {
                                    "Fn::If": [
                                        "3BastionCondition",
                                        {
                                            "Ref": "EIP3"
                                        },
                                        "Null"
                                    ]
                                },
                                ",",
                                {
                                    "Fn::If": [
                                        "4BastionCondition",
                                        {
                                            "Ref": "EIP4"
                                        },
                                        "Null"
                                    ]
                                },
                                "\"\n",
                                "CLOUDWATCHGROUP=",
                                {
                                    "Ref": "BastionMainLogGroup"
                                },
                                "\n",
                                "cfn-init -v --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource BastionLaunchConfiguration --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "cfn-signal -e $? --stack ",
                                {
                                    "Ref": "AWS::StackName"
                                },
                                " --resource ",
                                {
                                  "Fn::If": [
                                    "UseElasticIPs", "BastionAutoScalingGroup", "BastionELBAutoScalingGroup"
                                  ]
                                },
                                " --region ",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n"
                            ]
                        ]
                    }
                }
            }
        },
        "BastionEIPSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Condition": "UseElasticIPs",
            "Properties": {
                "GroupDescription": "Enables SSH Access to Bastion Hosts",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    }
                ]
            }
        },
        "BastionELBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Condition": "UseElasticLoadBalancer",
            "Properties": {
                "GroupDescription": "Enables SSH Access to Bastion Hosts",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                      "IpProtocol": "tcp",
                      "FromPort": "22",
                      "ToPort": "22",
                      "SourceSecurityGroupId": {"Fn::GetAtt" : ["ELBSecurityGroup", "GroupId"]}
                    }
                ]
            }
        },
        "ELBSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Condition": "UseElasticLoadBalancer",
            "Properties": {
                "GroupDescription": "Enables SSH Access to ELB",
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "LoadBalancerDNSName": {
             "Description": "THe DNS name of the load balancer",
             "Condition": "UseElasticLoadBalancer",
             "Value": {
                 "Fn::GetAtt": [ "BastionLoadBalancer", "DNSName" ]
             }
         },
        "EIP1": {
            "Description": "Elastic IP 1 for Bastion",
            "Condition": "UseElasticIPs",
            "Value": {
                "Ref": "EIP1"
            }
        },
        "EIP2": {
            "Condition": "2BastionCondition",
            "Description": "Elastic IP 2 for Bastion",
            "Value": {
                "Ref": "EIP2"
            }
        },
        "EIP3": {
            "Condition": "3BastionCondition",
            "Description": "Elastic IP 3 for Bastion",
            "Value": {
                "Ref": "EIP3"
            }
        },
        "EIP4": {
            "Condition": "4BastionCondition",
            "Description": "Elastic IP 4 for Bastion",
            "Value": {
                "Ref": "EIP4"
            }
        },
        "CloudWatchLogs": {
            "Value": {
                "Ref": "BastionMainLogGroup"
            },
            "Description": "CloudWatch Logs GroupName. Your SSH logs will be stored here."
        }
    }
}