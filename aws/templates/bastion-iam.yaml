AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation stack for the IAM roles assigned to bastion hosts.  Must be deployed before any bastion stacks. Borrows from AWS Quickstart templates.  
Parameters:
  S3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: lehto-bastion
    Description: S3 bucket name for the Quick Start assets. Quick Start bucket name can
      include numbers, lowercase letters, uppercase letters, and hyphens (-). It
      cannot start or end with a hyphen (-).
    Type: String
  S3KeyPrefix:
    AllowedPattern: '^([0-9a-zA-Z-.]+/)*$'
    ConstraintDescription: Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), dots (.) and forward slash (/). The prefix should
      end with a forward slash (/).
    Default: ''
    Description: S3 key prefix for the Quick Start assets. Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), dots
      (.) and forward slash (/) and it should end with a forward slash (/).
    Type: String
  BastionCFNRoleName:
    Default: bastion-cfn-role
    Type: String
  BastionRoleName:
    Default: bastion-role
    Type: String
  BastionLogGroupName:
    Default: bastion
    Type: String
Resources:
  BastionCFNRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: "Allow"
          Principal:
            Service: ["cloudformation.amazonaws.com"]
          Action: "sts:AssumeRole"
      Path: "/"
      RoleName: !Ref BastionCFNRoleName
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
  BastionHostRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Ref BastionRoleName
      Path: /
      AssumeRolePolicyDocument:
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Principal:
              Service:
                - !Sub 'ec2.${AWS::URLSuffix}'
            Effect: Allow
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore'
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudWatchAgentServerPolicy'
  BastionHostPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Sub ${BastionRoleName}-policy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action:
              - 's3:GetObject'
            Resource: !Sub
              - arn:${AWS::Partition}:s3:::${S3Bucket}/${S3KeyPrefix}*
              - S3Bucket: !Ref S3BucketName
            Effect: Allow
          - Action:
              - 'logs:CreateLogStream'
              - 'logs:GetLogEvents'
              - 'logs:PutLogEvents'
              - 'logs:DescribeLogGroups'
              - 'logs:DescribeLogStreams'
              - 'logs:PutRetentionPolicy'
              - 'logs:PutMetricFilter'
              - 'logs:CreateLogGroup'
            Resource: !Sub "arn:${AWS::Partition}:logs::${AWS::AccountId}:log-group:${BastionLogGroupName}:*"
            # Resource: !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:${BastionLogGroupName}:*"
            Effect: Allow
          - Action:
              - 'ec2:AssociateAddress'
              - 'ec2:DescribeAddresses'
            Resource: '*'
            Effect: Allow
      Roles:
        - !Ref BastionHostRole
  BastionHostProfile:
    DependsOn: BastionHostPolicy
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      InstanceProfileName: !Sub ${BastionRoleName}-profile
      Roles:
        - !Ref BastionHostRole
      Path: /
Outputs:
  CloudWatchLogs:
    Description: CloudWatch Logs GroupName. Your SSH logs will be stored here.
    Value: !Ref BastionLogGroupName
    Export:
      Name: !Sub '${AWS::StackName}-LogGroup'
  BastionHostRole:
    Description: Bastion IAM Role name
    Value: !Ref BastionHostRole
    Export:
      Name: !Sub '${AWS::StackName}-BastionHostRole'
  BastionCFNRole:
    Description: CloudFormation admin access service role.
    Value: !Sub ${AWS::StackName}-cfn-role
  BastionCFNRoleArn:
    Description: CloudFormation admin access service role ARN.
    Value: !GetAtt BastionCFNRole.Arn  
    Export:
      Name: !Sub '${AWS::StackName}-BastionCFNRoleArn'
